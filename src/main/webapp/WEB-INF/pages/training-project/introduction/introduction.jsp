<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="lt" tagdir="/WEB-INF/tags/layout" %>
<%@taglib prefix="wg" tagdir="/WEB-INF/tags/widget" %>
<%@taglib prefix="ce" tagdir="/WEB-INF/tags/application/core/context" %>
<%@taglib prefix="app" tagdir="/WEB-INF/tags/application" %>
<%@taglib prefix="ad" tagdir="/WEB-INF/tags/application/advertising" %>

<c:url var="Url" value=""/>

<a name="pageStart"></a>
<lt:layout cssClass="black-line"/>
<lt:layout cssClass="page introduction-page">
    <h1>5.1 Введение</h1>

    <br/>

    <p class="introduction">
        В этой главе мы с вами создадим настоящее приложение, которое
        будет иметь структуру и архитектуру современных проектов.
    </p>

    <br/>

    <p>
        Мотивацией к созданию настоящей главы является то, что изучив учебник, очень важно
        получить практические навыки, познакомиться с типовыми архитектурными решениями, популярными
        библиотеками, рецептами, хорошими практиками и т.п.
    </p>

    <p>
        Поэтапно создавая наше приложение, мы познакомимся с такими популярными библиотеками как: bootstrap,
        redux, router, и др. Увидим как их можно интегрировать в проект, согласовывать между собой, использовать
        в собственных компонентах и переопределять.
    </p>

    <p>
        Также я буду делиться практиками и советами по дизайну кода, чтобы последний выглядел профессионально.
        Мы познакомимся с интересными задачами и архитектурными решениями. После того, как вы полностью изучите
        эту главу - ваши знания будут на порядок глубже. Всё-таки дьявол кроется в мелочах:) Полученный опыт и
        технические решения вы можете смело применять в реальных проектах!
    </p>

    <p>
        Возможно некоторые вещи покажутся вам абсурдными, но не судите строго. Не всё то, что здесь будет описано - нужно
        делать именно таким образом. Я буду напоминать об этом по мере возможности.
    </p>

    <p>
        А теперь, пожалуй, поговорим о самом приложении. Давайте представим себе медицинскую клинику, которая
        обслуживает клиентов. Предположим, клинике нужно приложение, в котором доктора всегда могут видеть список
        приёмов пациентов, события, оповещения, сообщения, клиентов а также найти информацию своих коллегах. Приложением
        могут пользоваться и другие сотрудники: менеджеры, обслуживающий персонал и т.д. В рамках этой главы нас интересуют
        доктора. Расширение приложения для других ролей будет дополнительным практическим заданием.
    </p>

    <p>
        Это был лишь очень краткий список требований. По мере нашего продвижения мы будем их дополнять и детализировать.
        Часть требований будет дана для вашей самостоятельной реализации.
    </p>

    <p>
        Давайте перейдем к следующему разделу, в котором создадим каркас проекта и выведем на экран первую страницу.
    </p>
</lt:layout>

<c:url var="prevPageUrl" value="/training-project/topics"/>
<c:url var="nextPageUrl" value="/training-project/app-frame"/>

<app:page-navigate
        prevPageUrl="${prevPageUrl}"
        pageStartAncor="pageStart"
        nextPageUrl="${nextPageUrl}"
/>