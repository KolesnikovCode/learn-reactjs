<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="lt" tagdir="/WEB-INF/tags/layout" %>
<%@taglib prefix="wg" tagdir="/WEB-INF/tags/widget" %>
<%@taglib prefix="ce" tagdir="/WEB-INF/tags/application/core/context" %>
<%@taglib prefix="app" tagdir="/WEB-INF/tags/application" %>
<%@taglib prefix="ad" tagdir="/WEB-INF/tags/application/advertising" %>

<c:url var="Url" value=""/>

<a name="pageStart"></a>
<lt:layout cssClass="black-line"/>
<lt:layout cssClass="page page-mockups-page">
    <h1>5.3 Макеты страниц</h1>

    <br/>

    <p class="introduction">
        Макеты страниц можно создавать самостоятельно без особых сложностей, не
        привлекая дизайнера. Для этого нужно иметь немного терпения, и хороший инструмент.
    </p>

    <br/>
    <br/>
    <div class="gray-line"></div>
    <h2>5.3.1 Знакомимся с Figma</h2>
    <br/>

    <c:url var="figmaUrl" value="https://www.figma.com/files/recent"/>

    <p>
        Если у вас нет готового макета от дизайнера, то этим дизайнером
        можете стать вы сами. Предлагаю вашему вниманию онлайн инструмент
        <b><a href="${figmaUrl}">Figma</a></b> (кстати его мне посоветовал один знакомый дизайнер).
        С помощью него можно создавать разные макеты для своего приложения,
        не прибегая к услугам дизайнера. Работать с ним очень просто - почти
        как с Photoshop. Если ранее вы ничего о нём не слышали Figma - самое
        время с ним познакомиться, зайдя в онлайн редактор.
    </p>

    <p>
        Есть и другие онлайн редакторы. Выберите какой вам нравится и попробуйте
        создать какой-нибудь макет, если раньше этого не делали.
    </p>

    <br/>
    <br/>
    <div class="gray-line"></div>
    <h2>5.3.2 Макет домашней страницы</h2>
    <br/>

    <c:url var="materialIoUrl" value="https://material.io/"/>
    <c:url var="materialDesignUrl" value="http://x-site.by/info/material-design"/>

    <p>
        Поскольку дизайнера у нас нет, сделаем макет домашней страницы сами.
        Для этого будем использовать концепцию <b><a href="${materialIoUrl}">Material Design</a></b> от компании гугл.
        Если вы ничего не слышали о материальном дизайне, обязательно ознакомьтесь!
        В нем собраны интересные идеи и готовые решения, придающие вашему
        приложению очень приятный вид. Из русскоязычных источников могу
        порекомендовать <b><a href="${materialDesignUrl}">эту статью</a></b>.
    </p>

    <c:url var="materialColorsUrl" value="https://material.io/tools/color/#!/?view.left=0&view.right=0"/>

    <p>
        Для дизайна страницы нам понадобится палитра цветов. Я обычно
        использую <b><a href="${materialColorsUrl}">этот инструмент</a></b>. Тут можно правильно подобрать цветовую
        гамму для всего приложения. Не стал исключением и этот сайт.
    </p>

    <p>
        Давайте сделаем приложение в тёмно-голубых тонах:
    </p>

    <br/>
    <p class="text-center" style="overflow-x: auto">
        <img src="/resources/imges/training-project/color-sheme-tool.png" class="text-center">
    </p>
    <br/>

    <p>Я выбрал 3 варианта расцветки - они обозначены красными кружочками.</p>

    <c:url var="flaticonUrl" value="https://www.flaticon.com/"/>

    <p>
        Чтобы придать приложению живой вид, а также сделать его понятнее,
        можно добавить разнообразные картинки. В этом деле нам поможет очень
        удобный и популярный сервис <b><a href="${flaticonUrl}">Flat Icon</a></b>. Здесь собрана просто огромная
        коллекция картинок на любой вкус, из которых очень много бесплатных.
        Это настоящая находка для UI разработчика и дизайнера: всегда можно
        почерпнуть свежие идеи или взять готовые. Большое удобство еще и в том,
        что картинки можно редактировать и скачивать в разных форматах. Мы же
        будем работать с форматом <b>svg</b>.
    </p>

    <p>
        Выбрав цветовую гамму и пару картинок, можно приступать к созданию
        самого макета. У меня он получился вот таким:
    </p>

    <br/>
    <p class="text-center" style="overflow-x: auto">
        <img src="/resources/imges/training-project/home.png" class="text-center">
    </p>
    <br/>

    <p>
        На макете присутствуют: название страницы с иконкой, ФИО пользователя,
        кнопка “Выйти” и разделы в виде плитки.
    </p>

    <p>
        В разделе “Приёмы” доктор может посмотреть список приёмов клиентов у всех
        врачей. Также есть возможность фильтрации.
    </p>

    <p>
        В разделе “События” находится список всех событий, которыми могут быть
        новости компании, несчастный случай с клиентом или запланированное совещание.
    </p>

    <p>
        Оповещения приходят в случае каких-то экстренных случаев, а также могут быть
        предупреждениями или информацией. Предположим, их может рассылать только
        руководство или специальные отделы компании (например отдел техподдержки).
    </p>

    <p>
        Сотрудники могут общаться друг с другом в приложении с помощью сообщений.
        Таким образом уменьшается вероятность потери данных переписки, а также есть
        возможность следовать своим корпоративным правилам и соблюдать формализм, в
        отличие от использования обычных мессенджеров типа skype.
    </p>

    <p>
        Доктор в любой момент имеет возможность просмотреть список клиентов и историю
        обращений любого из них.
    </p>

    <p>
        Наконец, если нужно посмотреть информацию о коллеге - достаточно перейти в
        раздел “Сотрудники”.
    </p>

    <br/>
    <br/>
    <div class="gray-line"></div>
    <h2>5.3.3 Макет страницы управления приёмами</h2>
    <br/>

    <p>Очередной макет выглядит так:</p>

    <br/>
    <p class="text-center" style="overflow-x: auto">
        <img src="/resources/imges/training-project/appointments.png" class="text-center">
    </p>
    <br/>

    <p>
        Здесь мы видим список всех приёмов у докторов клиники и фильтр. Полей фильтра
        может быть больше, я сделал четыре лишь для примера. Пользователь может
        установить флажок “Только я” и просматривать только те приёмы, которые
        будет проводить именно он. В тоже время можно указать необходимый диапазон
        дат, а также отыскать приёмы определённого клиента.
    </p>

    <br/>
    <br/>
    <div class="gray-line"></div>
    <h2>5.3.4 Макет страницы аутентификации</h2>
    <br/>

    <p>
        Создадим страницу входа в приложение, где пользователь
        должен ввести логин и пароль:
    </p>

    <br/>
    <p class="text-center" style="overflow-x: auto">
        <img src="/resources/imges/training-project/auth.png" class="text-center">
    </p>
    <br/>

    <p>
        Эта страница будет встречать пользователей каждый раз при начале работы
        с приложением. Введя правильный логин и пароль, пользователь попадёт на
        домашнюю страницу.
    </p>

    <br/>
    <br/>
    <div class="gray-line"></div>
    <h2>5.3.5 Макеты остальных страниц</h2>
    <br/>

    <p>
        Макеты для остальных страниц будут выглядеть точно также.  Вы можете
        сделать их самостоятельно в качестве практического задания. Вот полная
        модель данных нашего приложения:
    </p>

    <br/>
    <p class="text-center" style="overflow-x: auto">
        <img src="/resources/imges/training-project/app-pages-sheme.png" class="text-center">
    </p>
    <br/>

    <p>
        Естественно она может быть какой угодно - это лишь небольшой учебный пример.
        В реальных проектах модель данных в разы больше.
    </p>
</lt:layout>

<c:url var="prevPageUrl" value="/training-project/app-frame"/>
<c:url var="nextPageUrl" value="/training-project/home-page"/>

<app:page-navigate
        prevPageUrl="${prevPageUrl}"
        pageStartAncor="pageStart"
        nextPageUrl="${nextPageUrl}"
/>